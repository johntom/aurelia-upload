{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","C:/trails/aurelia-upload-demo/front/src/app.html"],"names":["App","http","configure","config","withBaseUrl","upmess","submit","images","formData","FormData","i","length","append","console","log","fetch","mode","method","body","then","response","json","data","message","catch","error","debug","testing","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot"],"mappings":";;;;;;;;;;;;;;;;MASaA,cAAAA,cADZ;AAEC,iBAAYC,IAAZ,EAAkB;AAAA;;AAChBA,WAAKC,SAAL,CAAe,kBAAU;AACvBC,eAAOC,WAAP,CAAmB,wBAAnB;AAED,OAHD;AAIA,WAAKH,IAAL,GAAYA,IAAZ;AACA,WAAKI,MAAL,GAAc,EAAd;AACD;;kBAEDC,yBAAOC,QAAQ;AAAA;;AACb,UAAIC,WAAW,IAAIC,QAAJ,EAAf;;AAEA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,OAAOI,MAA3B,EAAmCD,GAAnC,EAAwC;AACtCF,iBAASI,MAAT,CAAgB,MAAhB,EAAwBL,OAAOG,CAAP,CAAxB;AACD;AACDG,cAAQC,GAAR,CAAYN,QAAZ,EAAsB,UAAtB;;AAIA,WAAKP,IAAL,CAAUc,KAAV,CAAgB,QAAhB,EAA0B;;AAEtBC,cAAM,MAFgB;AAGtBC,gBAAQ,MAHc;AAItBC,cAAMV;AAJgB,OAA1B,EASGW,IATH,CASQ;AAAA,eAAYC,SAASC,IAAT,EAAZ;AAAA,OATR,EAUGF,IAVH,CAUQ,gBAAQ;AACZN,gBAAQC,GAAR,CAAYQ,KAAKC,OAAjB;AACA,cAAKlB,MAAL,GAAciB,KAAKC,OAAnB;AACAV,gBAAQC,GAAR,CAAY,aAAZ,EAA2B,MAAKT,MAAhC;AACD,OAdH,EAeGmB,KAfH,CAeS;AAAA,eAASX,QAAQC,GAAR,CAAYW,KAAZ,CAAT;AAAA,OAfT;AAkBD;;;;;;;;;;;oBC/CY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCzB,YAAAA;;;;;;;;;;AANhB0B,UAAQzB,MAAR,CAAe;AACb0B,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAAS5B,SAAT,CAAmB6B,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYR,KAAhB,EAAuB;AACrBK,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYR,OAAhB,EAAyB;AACvBI,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBlB,IAAhB,CAAqB;AAAA,aAAMY,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBepC,YAAAA;AAAT,WAASA,SAAT,CAAmBC,MAAnB,EAA2B,CAEjC;;ACFD","file":"app-bundle.js","sourcesContent":["import {\r\n  inject\r\n} from 'aurelia-framework';\r\nimport {\r\n  HttpClient\r\n} from 'aurelia-fetch-client';\r\n// import { HttpClient } from 'aurelia-http-client';\r\n\r\n@inject(HttpClient)\r\nexport class App {\r\n  constructor(http) {\r\n    http.configure(config => {\r\n      config.withBaseUrl('http://localhost:3000/');\r\n      //   config.withBaseUrl('http://localhost:3010/');\r\n    });\r\n    this.http = http;\r\n    this.upmess = ''\r\n  }\r\n\r\n  submit(images) {\r\n    let formData = new FormData();\r\n    // let images = file\r\n    for (let i = 0; i < images.length; i++) {\r\n      formData.append('file', images[i]);\r\n    }\r\n    console.log(formData, 'formData')\r\n      //alert ('fd images[0] ',images[0])\r\n      // this.http.fetch('attachments', {\r\n    // this.http.fetch('message', {\r\n    this.http.fetch('upload', {\r\n\r\n        mode: 'cors',\r\n        method: 'POST',\r\n        body: formData\r\n          // ,headers: {\r\n          //   'Content-Type': \"multipart/form-data\"\r\n          // }\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.message)\r\n        this.upmess = data.message\r\n        console.log('this.upmess', this.upmess)\r\n      })\r\n      .catch(error => console.log(error));\r\n\r\n\r\n  }\r\n\r\n  // submitWithHttp(images) {\r\n  //     let formData = new FormData();\r\n  //\r\n  //     for (let i = 0; i < images.length; i++) {\r\n  //         formData.append('images', images[i]);\r\n  //     }\r\n  //\r\n  //     this.http.post('attachments', formData)\r\n  //         .then(data => console.log(data))\r\n  //         .catch(error => console.log(error));\r\n  // }\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n",null],"sourceRoot":"..\\src"}